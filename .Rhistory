setwd("./")
getwd()
setwd("./")
getwd()
dir()
setwd("I:/coursera/5_Reproducible_research/Github_assignment/RepData_PeerAssessment1")
getwd()
if(!file.exists("activity")){
unzip("activity.zip")
}
if(!file.exists("activity.csv")){
unzip("activity.zip")
}
data <- read.csv(data_file)
data_file <- "activity.csv"
data <- read.csv(data_file)
View(data)
?hist
data <- read.csv(data_file)
?aggregate
aggregate_by_date <- aggregate(steps ~ date, data, sum, na.rm = TRUE)
View(aggregate_by_date)
aggregate_by_date <- aggregate(steps ~ date, data, sum)
View(aggregate_by_date)
aggregate_by_date <- aggregate(steps ~ date, data, sum, na.rm = TRUE)
View(aggregate_by_date)
?barplot
barplot(aggregate_by_date$steps, names.arg = aggregate_by_date$date)
barplot(aggregate_by_date$steps, names.arg = aggregate_by_date$date,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
?as.Date
data$date <- as.Date(data$date, "%Y-%m-%d")
View(data)
head(data)
aggregate_by_date <- aggregate(steps ~ date, data, sum, na.rm = TRUE)
barplot(aggregate_by_date$steps, names.arg = aggregate_by_date$date,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
str(data)
?hist
hist(aggregate_by_date$steps, breaks = aggregate_by_date$date,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
hist(aggregate_by_date$steps,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
hist(breaks = aggregate_by_date$date, aggregate_by_date$steps,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
hist(aggregate_by_date$steps)
barplot(aggregate_by_date$steps, names.arg = aggregate_by_date$date,
xlab = "Date", ylab = "Total number of steps",
main = "Total number of steps taken each day")
hist(aggregate_by_date$steps)
steps_mean <- rowMeans(aggregate_by_date$steps)
steps_mean <- mean(aggregate_by_date$steps)
steps_median <- median(aggregate_by_date$steps)
plot(data$interval, data$steps, type = "l")
aggregate_by_interval <- aggregate(steps ~ interval, data, mean)
View(aggregate_by_interval)
plot(aggregate_by_interval$interval, aggregate_by_interval$steps, type = "l")
aggregate_by_interval$interval[which.max(aggregate_by_interval$steps)]
sum(is.na(data$steps))
missing_values <- sum(is.na(data$steps))
?apply
?tapply
?dapply
?mapply
?apply
View(aggregate_by_interval)
imputing <- function(x){
if(is.na(x[1])){
x[1] = aggregate_by_interval[, interval == x[3]][2]
}
}
apply(data, 1, imputing)
imputing <- function(x){
if(is.na(x[1])){
as.ord
x[1] = aggregate_by_interval[match(x[3], aggregate_by_interval$interval), "steps"]
}
}
apply(data, 1, imputing)
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data, 1, imputing)
View(data)
source("testcode.R")
source("testcode.R")
source("testcode.R")
View(data)
missing_values <- sum(is.na(data$steps))
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data, 1, imputing)
View(data)
View(aggregate_by_interval)
data <- apply(data, 1, imputing)
source("testcode.R")
View(aggregate_by_interval)
# total number of missing values
missing_values <- sum(is.na(data$steps))
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
newData <- apply(data, 1, imputing)
str(newData)
?mice
missing_values <- sum(is.na(data$steps))
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
newData <- apply(data, 1, imputing)
apply(data, 1, imputing)
View(data)
apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
if(is.na(x[1])){
print(x[3])
rowIndex <- match(x[3], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
print(x$steps)
if(is.na(x$steps)){
rowIndex <- match(x$interval, aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[1] = aggregate_by_interval[rowIndex, ][2]
}
}
apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]
}
}
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
}
}
apply(data[1,], 1, imputing)
newData <- apply(data[1,], 1, imputing)
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
x
}
}
newData <- apply(data[1,], 1, imputing)
View(newData)
apply(data[1,], 1, imputing)
View(data)
apply(data, 1, imputing)
View(data)
imputing <- function(x){
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
}
else{
x[[1]]
}
}
imputed_steps <- apply(data, 1, imputing)
str(imputed_steps)
View(aggregate_by_interval)
imputing <- function(x){
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
}
}
imputed_steps <- apply(data, 1, imputing)
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
x
}
}
newData <- apply(data[1,], 1, imputing)
View(newData)
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
x[[1]]
}
}
newData <- apply(data[1,], 1, imputing)
newData <- apply(data[c(1,2,3),], 1, imputing)
newData <- apply(data[c(1,2),], 1, imputing)
newData <- apply(data[c(1,2,3),], 1, imputing)
?apply
imputing <- function(x){
print(x)
print(x[[1]])
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
print(rowIndex)
print(aggregate_by_interval[rowIndex, ])
x[[1]] = aggregate_by_interval[rowIndex, ][[2]]
x
}
}
newData <- apply(data[c(1,2,3),], 1, imputing)
View(newData)
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
aggregate_by_interval[rowIndex, ][2]
}
}
data$steps <- apply(data, 1, imputing)
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] <- aggregate_by_interval[rowIndex, ][2]
}
x[1]
}
data <- read.csv(data_file)
data$date <- as.Date(data$date, "%Y-%m-%d")
aggregate_by_interval <- aggregate(steps ~ interval, data, mean)
imputing <- function(x){
if(is.na(x[1])){
rowIndex <- match(x[3], aggregate_by_interval$interval)
x[1] <- aggregate_by_interval[rowIndex, ][2]
}
x[1]
}
data$steps <- apply(data, 1, imputing)
View(data)
imputing <- function(x){
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
x[[1]] <- aggregate_by_interval[rowIndex, ][[2]]
}
x[[1]]
}
data$steps <- apply(data, 1, imputing)
View(data)
View(aggregate_by_interval)
# load data set
data <- read.csv(data_file)
data$date <- as.Date(data$date, "%Y-%m-%d")
data <- read.csv(data_file)
data$date <- as.Date(data$date, "%Y-%m-%d")
data_file <- "activity.csv"
data <- read.csv(data_file)
data$date <- as.Date(data$date, "%Y-%m-%d")
aggregate_by_interval <- aggregate(steps ~ interval, data, mean)
imputing <- function(x){
if(is.na(x[[1]])){
rowIndex <- match(x[[3]], aggregate_by_interval$interval)
x[[1]] <- aggregate_by_interval[rowIndex, ][[2]]
}
x[[1]]
}
newData <- data
newData$steps <- apply(newData, 1, imputing)
View(newData)
View(newData)
View(aggregate_by_interval)
View(newData)
data$steps <- apply(data, 1, imputing)
View(data)
